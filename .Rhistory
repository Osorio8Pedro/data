color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
dat <-
df_all %>%
incidence(date_index = datex, groups = state, count = New_Deaths) %>%
left_join(lookup, by = c("date_index" = "datex"))
g <- ggplot(
data = dat,
aes(
x = date_index,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
dat
library(incidence2)
View(dat)
g <- plot(
data = dat,
aes(
x = date_index,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
gg
g <- ggplot(
data = dat,
aes(
x = date_index,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
dat<-filter(dat,# nhs_region=='17. Norte Grande' |nhs_region=='18. Norte Chico' | nhs_region=='19. Zona Central' |nhs_region=='20. Zona Sur'| nhs_region=='21. Zona Austral'|nhs_region=='22. Regions Sin Metropolitana')
#                         nhs_region=='16. Región de Magallanes y Antártica Chilena')
#nhs_pathways_covid19<-filter(nhs_pathways_covid19, id_region=='1'|id_region=='2'|id_region=='3'|id_region=='4'|id_region=='5'|id_region=='6'|id_region=='7'|id_region=='8'|id_region=='9'|id_region=='10'|id_region=='11'|id_region=='12'|id_region=='13'|id_region=='14'|id_region=='15'|id_region=='16')
state=='01. Región de Arica y Parinacota')#| nhs_region=='02. Región de Tarapacá'| nhs_region=='03. Región de Antofagasta' | nhs_region=='04. Región de Atacama' | nhs_region=='05. Región de Coquimbo' | nhs_region=='06. Región de Valparaíso' | nhs_region=='07. Región Metropolitana de Santiago'  | nhs_region=="08. Región del Libertador Bernardo O'Higgins"|nhs_region=='09. Región del Maule' |
g <- ggplot(
data = dat,
aes(
x = date_index,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
View(dat)
source('functions.R')
defStartdate <- NA
defBuffer <- 7
#defBaseline is the default value of points to use to compute the exponential growth control limits
defBaseline <- 20
######Regiones
dfff=df_all[which(df_all$datex>"2021-11-22"),]
dfff=dfff[which(dfff$datex<"2021-11-24"),]
#######Regiones
#dfff=df_all[which(df_all$datex>"2021-11-22"),]
#dfff=dfff[which(dfff$datex<"2021-11-24"),]
ftregion<-read.csv("newftregion.txt",sep=";",header=T)
ftregion=ftregion[which(ftregion$fch_confirmado>"2021-01-01"),]
b=ftregion$txt_nombreregion
c=ftregion$cant_casosconfirmadosdiario
d=ftregion$fch_confirmado
v=ftregion$cant_casosconfirmados
i=ftregion$id_region
df_state=data.frame("date"=d,"state"=b,"fips"=i,"cases"=c,"deaths"=v)
df_state$datex <- as.Date(df_state$date)
df_state <- df_state[order(df_state$state, df_state$datex), ]
df_state$New_Deaths     <- ave(df_state$deaths, df_state$state, FUN = function(x) { c(x[1], diff(x)) })
df_state$New_Deaths_max <- ave(df_state$New_Deaths, df_state$state, FUN = max)
df_state$level          <- 'state'
df_state <- df_state[c('level', 'state', 'datex', 'New_Deaths', 'New_Deaths_max')]
date_max_state <- max(df_state$datex, na.rm = TRUE)
#df_all <- rbind(df_country, df_state)
df_all <- rbind( df_state)
plot(df_all$datex, df_all$New_Deaths, type='l')
# find phase dates for both raw and adjusted data
df_all_raw <- by(
data = df_all,
INDICES = df_all[c('level', 'state')],
FUN = find_phase_dates,
adjust = FALSE)
df_all_raw <- do.call(dplyr::bind_rows, df_all_raw)
df_all_raw$type <- 'raw'
df_all_adjusted <- by(
data = df_all,
INDICES = df_all[c('level', 'state')],
FUN = find_phase_dates,
adjust = TRUE)
df_all_adjusted <- do.call(dplyr::bind_rows, df_all_adjusted)
df_all_adjusted$type <- 'adjusted'
df_all <- do.call(dplyr::bind_rows, list(df_all_raw, df_all_adjusted))
####
first_date <-"2021-01-01"
pathways_recent <- filter(df_all, datex >= first_date)
lookup <- select(pathways_recent,midline, datex, ucl, lcl,New_Deaths_Dump,New_Deaths_Dump) %>%  distinct()
nhs_pathways_covid19$date<-as.Date(nhs_pathways_covid19$date)
dat <-
df_all %>%
incidence(date_index = datex, groups = state, count = New_Deaths) %>%
left_join(lookup, by = c("date_index" = "datex"))
dat<-filter(dat,# nhs_region=='17. Norte Grande' |nhs_region=='18. Norte Chico' | nhs_region=='19. Zona Central' |nhs_region=='20. Zona Sur'| nhs_region=='21. Zona Austral'|nhs_region=='22. Regions Sin Metropolitana')
#                         nhs_region=='16. Región de Magallanes y Antártica Chilena')
#nhs_pathways_covid19<-filter(nhs_pathways_covid19, id_region=='1'|id_region=='2'|id_region=='3'|id_region=='4'|id_region=='5'|id_region=='6'|id_region=='7'|id_region=='8'|id_region=='9'|id_region=='10'|id_region=='11'|id_region=='12'|id_region=='13'|id_region=='14'|id_region=='15'|id_region=='16')
state=='01. Región de Arica y Parinacota')#| nhs_region=='02. Región de Tarapacá'| nhs_region=='03. Región de Antofagasta' | nhs_region=='04. Región de Atacama' | nhs_region=='05. Región de Coquimbo' | nhs_region=='06. Región de Valparaíso' | nhs_region=='07. Región Metropolitana de Santiago'  | nhs_region=="08. Región del Libertador Bernardo O'Higgins"|nhs_region=='09. Región del Maule' |
g <- ggplot(
data = dat,
aes(
x = date_index,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
source('functions.R')
defStartdate <- NA
#defBaseline is the default value of points to use to compute the exponential growth control limits
defBaseline <- 20
ftregion=ftregion[which(ftregion$fch_confirmado>"2021-01-01"),]
b=ftregion$txt_nombreregion
c=ftregion$cant_casosconfirmadosdiario
#c=ftregion$cant_fallecidos
#v=ftregion$cant_
p=ftregion$cant_poblacion
c=round((c/p*100000),1)
d=ftregion$fch_confirmado
#c=ftregion$cant_fallecidos
#v=ftregion$cant_
p=ftregion$cant_poblacion
b=ftregion$txt_nombreregion
c=ftregion$cant_casosconfirmadosdiario
#######Regiones
#dfff=df_all[which(df_all$datex>"2021-11-22"),]
#dfff=dfff[which(dfff$datex<"2021-11-24"),]
ftregion<-read.csv("newftregion.txt",sep=";",header=T)
#######Regiones
#dfff=df_all[which(df_all$datex>"2021-11-22"),]
#dfff=dfff[which(dfff$datex<"2021-11-24"),]
ftregion<-read.csv("newftregion.txt",sep=";",header=T)
ftregion=ftregion[which(ftregion$fch_confirmado>"2021-01-01"),]
b=ftregion$txt_nombreregion
b=ftregion$txt_nombreregion
c=ftregion$cant_casosconfirmadosdiario
#c=ftregion$cant_fallecidos
#v=ftregion$cant_
p=ftregion$cant_poblacion
d=ftregion$fch_confirmado
v=ftregion$cant_casosconfirmados
i=ftregion$id_region
df_state=data.frame("date"=d,"state"=b,"fips"=i,"cases"=c,"deaths"=v)
df_state$datex <- as.Date(df_state$date)
df_state <- df_state[order(df_state$state, df_state$datex), ]
df_state$New_Deaths     <- ave(df_state$deaths, df_state$state, FUN = function(x) { c(x[1], diff(x)) })
df_state$New_Deaths_max <- ave(df_state$New_Deaths, df_state$state, FUN = max)
df_state$level          <- 'state'
df_state <- df_state[c('level', 'state', 'datex', 'New_Deaths', 'New_Deaths_max')]
date_max_state <- max(df_state$datex, na.rm = TRUE)
#df_all <- rbind(df_country, df_state)
df_all <- rbind( df_state)
plot(df_all$datex, df_all$New_Deaths, type='l')
# find phase dates for both raw and adjusted data
df_all_raw <- by(
data = df_all,
INDICES = df_all[c('level', 'state')],
FUN = find_phase_dates,
adjust = FALSE)
df_all_raw <- do.call(dplyr::bind_rows, df_all_raw)
df_all_raw$type <- 'raw'
df_all_adjusted <- by(
data = df_all,
INDICES = df_all[c('level', 'state')],
FUN = find_phase_dates,
adjust = TRUE)
df_all_adjusted <- do.call(dplyr::bind_rows, df_all_adjusted)
df_all_adjusted$type <- 'adjusted'
df_all <- do.call(dplyr::bind_rows, list(df_all_raw, df_all_adjusted))
dat<-filter(dat,# nhs_region=='17. Norte Grande' |nhs_region=='18. Norte Chico' | nhs_region=='19. Zona Central' |nhs_region=='20. Zona Sur'| nhs_region=='21. Zona Austral'|nhs_region=='22. Regions Sin Metropolitana')
#                         nhs_region=='16. Región de Magallanes y Antártica Chilena')
#nhs_pathways_covid19<-filter(nhs_pathways_covid19, id_region=='1'|id_region=='2'|id_region=='3'|id_region=='4'|id_region=='5'|id_region=='6'|id_region=='7'|id_region=='8'|id_region=='9'|id_region=='10'|id_region=='11'|id_region=='12'|id_region=='13'|id_region=='14'|id_region=='15'|id_region=='16')
state=='01. Región de Arica y Parinacota')#| nhs_region=='02. Región de Tarapacá'| nhs_region=='03. Región de Antofagasta' | nhs_region=='04. Región de Atacama' | nhs_region=='05. Región de Coquimbo' | nhs_region=='06. Región de Valparaíso' | nhs_region=='07. Región Metropolitana de Santiago'  | nhs_region=="08. Región del Libertador Bernardo O'Higgins"|nhs_region=='09. Región del Maule' |
dat<-filter(def_all,# nhs_region=='17. Norte Grande' |nhs_region=='18. Norte Chico' | nhs_region=='19. Zona Central' |nhs_region=='20. Zona Sur'| nhs_region=='21. Zona Austral'|nhs_region=='22. Regions Sin Metropolitana')
#                         nhs_region=='16. Región de Magallanes y Antártica Chilena')
#nhs_pathways_covid19<-filter(nhs_pathways_covid19, id_region=='1'|id_region=='2'|id_region=='3'|id_region=='4'|id_region=='5'|id_region=='6'|id_region=='7'|id_region=='8'|id_region=='9'|id_region=='10'|id_region=='11'|id_region=='12'|id_region=='13'|id_region=='14'|id_region=='15'|id_region=='16')
state=='01. Región de Arica y Parinacota')#| nhs_region=='02. Región de Tarapacá'| nhs_region=='03. Región de Antofagasta' | nhs_region=='04. Región de Atacama' | nhs_region=='05. Región de Coquimbo' | nhs_region=='06. Región de Valparaíso' | nhs_region=='07. Región Metropolitana de Santiago'  | nhs_region=="08. Región del Libertador Bernardo O'Higgins"|nhs_region=='09. Región del Maule' |
dat<-filter(df_all,# nhs_region=='17. Norte Grande' |nhs_region=='18. Norte Chico' | nhs_region=='19. Zona Central' |nhs_region=='20. Zona Sur'| nhs_region=='21. Zona Austral'|nhs_region=='22. Regions Sin Metropolitana')
#                         nhs_region=='16. Región de Magallanes y Antártica Chilena')
#nhs_pathways_covid19<-filter(nhs_pathways_covid19, id_region=='1'|id_region=='2'|id_region=='3'|id_region=='4'|id_region=='5'|id_region=='6'|id_region=='7'|id_region=='8'|id_region=='9'|id_region=='10'|id_region=='11'|id_region=='12'|id_region=='13'|id_region=='14'|id_region=='15'|id_region=='16')
state=='01. Región de Arica y Parinacota')#| nhs_region=='02. Región de Tarapacá'| nhs_region=='03. Región de Antofagasta' | nhs_region=='04. Región de Atacama' | nhs_region=='05. Región de Coquimbo' | nhs_region=='06. Región de Valparaíso' | nhs_region=='07. Región Metropolitana de Santiago'  | nhs_region=="08. Región del Libertador Bernardo O'Higgins"|nhs_region=='09. Región del Maule' |
g <- ggplot(
data = df_all,
aes(
x = date_index,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
g <- ggplot(
data = df_all,
aes(
x = date,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
View(df_all)
g <- ggplot(
data = df_all,
aes(
x = datex,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
g <- ggplot(
data = df_state,
aes(
x = datex,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
library(ggplot2)
dat<-filter(df_state,# nhs_region=='17. Norte Grande' |nhs_region=='18. Norte Chico' | nhs_region=='19. Zona Central' |nhs_region=='20. Zona Sur'| nhs_region=='21. Zona Austral'|nhs_region=='22. Regions Sin Metropolitana')
#                         nhs_region=='16. Región de Magallanes y Antártica Chilena')
#nhs_pathways_covid19<-filter(nhs_pathways_covid19, id_region=='1'|id_region=='2'|id_region=='3'|id_region=='4'|id_region=='5'|id_region=='6'|id_region=='7'|id_region=='8'|id_region=='9'|id_region=='10'|id_region=='11'|id_region=='12'|id_region=='13'|id_region=='14'|id_region=='15'|id_region=='16')
state=='01. Región de Arica y Parinacota')#| nhs_region=='02. Región de Tarapacá'| nhs_region=='03. Región de Antofagasta' | nhs_region=='04. Región de Atacama' | nhs_region=='05. Región de Coquimbo' | nhs_region=='06. Región de Valparaíso' | nhs_region=='07. Región Metropolitana de Santiago'  | nhs_region=="08. Región del Libertador Bernardo O'Higgins"|nhs_region=='09. Región del Maule' |
g <- ggplot(
data = dat,
aes(
x = datex,
y = New_Deaths)) +
geom_point() +
geom_line() +
geom_line(
aes(
y = midline),
color = 'red') +
geom_line(
aes(
y = ucl),
color = 'blue',
linetype = 'dashed') +
geom_line(
aes(
y = lcl),
color = 'blue',
linetype = 'dashed') +
geom_point(
aes(
y = New_Deaths_Dump),
color = 'red') +
scale_y_continuous(
limits = c(0, max(20, 2 * max(df_state$New_Deaths, na.rm = TRUE), max(df_state$New_Deaths_Dump, na.rm = TRUE)))) +
labs(
x = df_state$state[1],
y = paste(df_state$type[1], 'deaths'))
plot(g)
source('functions.R')
defStartdate <- NA
defBuffer <- 7
#defBaseline is the default value of points to use to compute the exponential growth control limits
defBaseline <- 20
#######Regiones
#dfff=df_all[which(df_all$datex>"2021-11-22"),]
#dfff=dfff[which(dfff$datex<"2021-11-24"),]
ftregion<-read.csv("newftregion.txt",sep=";",header=T)
ftregion=ftregion[which(ftregion$fch_confirmado>"2021-01-01"),]
b=ftregion$txt_nombreregion
c=ftregion$cant_casosconfirmadosdiario
#c=ftregion$cant_fallecidos
#v=ftregion$cant_
p=ftregion$cant_poblacion
d=ftregion$fch_confirmado
v=ftregion$cant_casosconfirmados
i=ftregion$id_region
df_state=data.frame("date"=d,"state"=b,"fips"=i,"cases"=c,"deaths"=v)
df_state$datex <- as.Date(df_state$date)
df_state <- df_state[order(df_state$state, df_state$datex), ]
df_state$New_Deaths     <- ave(df_state$deaths, df_state$state, FUN = function(x) { c(x[1], diff(x)) })
df_state$New_Deaths_max <- ave(df_state$New_Deaths, df_state$state, FUN = max)
df_state$level          <- 'state'
df_state <- df_state[c('level', 'state', 'datex', 'New_Deaths', 'New_Deaths_max')]
date_max_state <- max(df_state$datex, na.rm = TRUE)
#df_all <- rbind(df_country, df_state)
df_all <- rbind( df_state)
plot(df_all$datex, df_all$New_Deaths, type='l')
# find phase dates for both raw and adjusted data
df_all_raw <- by(
data = df_all,
INDICES = df_all[c('level', 'state')],
FUN = find_phase_dates,
adjust = FALSE)
